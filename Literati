import 'dart:async';
import 'package:flutter/material.dart';
import 'dart:math';

void main() {
  runApp(LiteratiApp());
}

class LiteratiApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Literati',
      theme: ThemeData(primarySwatch: Colors.blue),
      home: LiteratiHome(),
    );
  }
}

class LiteratiHome extends StatefulWidget {
  @override
  _LiteratiHomeState createState() => _LiteratiHomeState();
}

class _LiteratiHomeState extends State<LiteratiHome> {
  List<String> letters = [];
  List<String> guessedWords = []; 
  String currentWord = "";
  int score = 0;
  Timer? timer;
  int timeLeft = 60;

  @override
  void initState() {
    super.initState();
    startNewGame();
  }

  void startNewGame() {
    generateLetters();
    guessedWords.clear();
    score = 0;
    timeLeft = 60;
    currentWord = "";
    if (timer != null) {
      timer!.cancel();
    }
    startTimer();
  }

  void generateLetters() {
    final random = Random();
    List<String> alphabet = [
      "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k",
      "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
      "w", "x", "y", "z"
    ];

    letters = List.generate(11, (_) => alphabet[random.nextInt(alphabet.length)]);
    letters.shuffle(); 
  }

  void startTimer() {
    timer = Timer.periodic(Duration(seconds: 1), (Timer t) {
      setState(() {
        if (timeLeft > 0) {
          timeLeft--;
        } else {
          timer?.cancel();
          showDialog(
            context: context,
            builder: (context) => AlertDialog(
              title: Text("Time is up!"),
              content: Text("Your score: $score"),
              actions: [
                TextButton(
                  onPressed: () {
                    Navigator.of(context).pop();
                    startNewGame();
                  },
                  child: Text("New game"),
                )
              ],
            ),
          );
        }
      });
    });
  }

  void guessWord(String word) {
    setState(() {
      word = word.toLowerCase(); 
      if (canFormWord(word)) {
        guessedWords.add(word); 
        score += word.length; 
      }
      currentWord = ""; 
    });
  }

  bool canFormWord(String word) {
    Map<String, int> letterCount = {};

    for (var letter in letters) {
      letterCount[letter] = (letterCount[letter] ?? 0) + 1;
    }

    for (var letter in word.split('')) {
      if (!letterCount.containsKey(letter) || letterCount[letter]! <= 0) {
        return false; 
      }
      letterCount[letter] = letterCount[letter]! - 1; 
    }

    return true; 
  }

  @override
  void dispose() {
    timer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Literati')),
      body: Column(
        children: [
          Text("Time left: $timeLeft", style: TextStyle(fontSize: 24)),
          SizedBox(height: 10),
          Text("Your letters: ${letters.join(', ')}", style: TextStyle(fontSize: 24)),
          SizedBox(height: 10),
          Expanded(
            child: ListView(
              children: guessedWords.map((word) => ListTile(title: Text(word))).toList(),
            ),
          ),
          TextField(
            onChanged: (value) {
              currentWord = value;
            },
            decoration: InputDecoration(
              labelText: 'Enter your word',
              suffixIcon: IconButton(
                icon: Icon(Icons.check),
                onPressed: () {
                  if (currentWord.isNotEmpty) {
                    guessWord(currentWord);
                  }
                },
              ),
            ),
          ),
          Text("Your score: $score", style: TextStyle(fontSize: 24)),
          SizedBox(height: 20),
          ElevatedButton(
            onPressed: startNewGame,
            child: Text("New game"),
          ),
        ],
      ),
    );
  }
}
